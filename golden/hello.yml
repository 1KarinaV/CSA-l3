source: |-
  let a = "h";
  let b = "e";
  let c = "l";
  let d = "l";
  let e = "o";
  let f = " ";
  let g = "w";
  let h = "o";
  let i = "r";
  let j = "l";
  let k = "d";
  line(a);
  line(b);
  line(c);
  line(d);
  line(e);
  line(f);
  line(g);
  line(h);
  line(i);
  line(j);
  line(k);
input: |-

output: |
  ============================================================
  hello worldd
  instr_counter:  22 ticks: 77
log: |
  DEBUG:root:{TICK: 0, PC: 0, ADDR: 0, OUT: 0, AC: 0, DR: 0} ld [0, 'h']
  DEBUG:root:{TICK: 4, PC: 1, ADDR: 0, OUT: 104, AC: 104, DR: 104} ld [1, 'e']
  DEBUG:root:{TICK: 8, PC: 2, ADDR: 1, OUT: 101, AC: 101, DR: 101} ld [2, 'l']
  DEBUG:root:{TICK: 12, PC: 3, ADDR: 2, OUT: 108, AC: 108, DR: 108} ld [3, 'l']
  DEBUG:root:{TICK: 16, PC: 4, ADDR: 3, OUT: 108, AC: 108, DR: 108} ld [4, 'o']
  DEBUG:root:{TICK: 20, PC: 5, ADDR: 4, OUT: 111, AC: 111, DR: 111} ld [5, ' ']
  DEBUG:root:{TICK: 24, PC: 6, ADDR: 5, OUT: 32, AC: 32, DR: 32} ld [6, 'w']
  DEBUG:root:{TICK: 28, PC: 7, ADDR: 6, OUT: 119, AC: 119, DR: 119} ld [7, 'o']
  DEBUG:root:{TICK: 32, PC: 8, ADDR: 7, OUT: 111, AC: 111, DR: 111} ld [8, 'r']
  DEBUG:root:{TICK: 36, PC: 9, ADDR: 8, OUT: 114, AC: 114, DR: 114} ld [9, 'l']
  DEBUG:root:{TICK: 40, PC: 10, ADDR: 9, OUT: 108, AC: 108, DR: 108} ld [10, 'd']
  DEBUG:root:{TICK: 44, PC: 11, ADDR: 10, OUT: 100, AC: 100, DR: 100} println [0]
  DEBUG:root:output: '' << 'h'
  DEBUG:root:{TICK: 47, PC: 12, ADDR: 0, OUT: 104, AC: 100, DR: 100} println [1]
  DEBUG:root:output: 'h' << 'e'
  DEBUG:root:{TICK: 50, PC: 13, ADDR: 1, OUT: 101, AC: 100, DR: 100} println [2]
  DEBUG:root:output: 'he' << 'l'
  DEBUG:root:{TICK: 53, PC: 14, ADDR: 2, OUT: 108, AC: 100, DR: 100} println [3]
  DEBUG:root:output: 'hel' << 'l'
  DEBUG:root:{TICK: 56, PC: 15, ADDR: 3, OUT: 108, AC: 100, DR: 100} println [4]
  DEBUG:root:output: 'hell' << 'o'
  DEBUG:root:{TICK: 59, PC: 16, ADDR: 4, OUT: 111, AC: 100, DR: 100} println [5]
  DEBUG:root:output: 'hello' << ' '
  DEBUG:root:{TICK: 62, PC: 17, ADDR: 5, OUT: 32, AC: 100, DR: 100} println [6]
  DEBUG:root:output: 'hello ' << 'w'
  DEBUG:root:{TICK: 65, PC: 18, ADDR: 6, OUT: 119, AC: 100, DR: 100} println [7]
  DEBUG:root:output: 'hello w' << 'o'
  DEBUG:root:{TICK: 68, PC: 19, ADDR: 7, OUT: 111, AC: 100, DR: 100} println [8]
  DEBUG:root:output: 'hello wo' << 'r'
  DEBUG:root:{TICK: 71, PC: 20, ADDR: 8, OUT: 114, AC: 100, DR: 100} println [9]
  DEBUG:root:output: 'hello wor' << 'l'
  DEBUG:root:{TICK: 74, PC: 21, ADDR: 9, OUT: 108, AC: 100, DR: 100} println [10]
  DEBUG:root:output: 'hello worl' << 'd'
  DEBUG:root:{TICK: 77, PC: 22, ADDR: 10, OUT: 100, AC: 100, DR: 100} halt 
  INFO:root:output_buffer: 'hello world'

code: |-
  [
      {
          "opcode": "ld",
          "arg": [
              0,
              "h"
          ]
      },
      {
          "opcode": "ld",
          "arg": [
              1,
              "e"
          ]
      },
      {
          "opcode": "ld",
          "arg": [
              2,
              "l"
          ]
      },
      {
          "opcode": "ld",
          "arg": [
              3,
              "l"
          ]
      },
      {
          "opcode": "ld",
          "arg": [
              4,
              "o"
          ]
      },
      {
          "opcode": "ld",
          "arg": [
              5,
              " "
          ]
      },
      {
          "opcode": "ld",
          "arg": [
              6,
              "w"
          ]
      },
      {
          "opcode": "ld",
          "arg": [
              7,
              "o"
          ]
      },
      {
          "opcode": "ld",
          "arg": [
              8,
              "r"
          ]
      },
      {
          "opcode": "ld",
          "arg": [
              9,
              "l"
          ]
      },
      {
          "opcode": "ld",
          "arg": [
              10,
              "d"
          ]
      },
      {
          "opcode": "println",
          "arg": [
              0
          ]
      },
      {
          "opcode": "println",
          "arg": [
              1
          ]
      },
      {
          "opcode": "println",
          "arg": [
              2
          ]
      },
      {
          "opcode": "println",
          "arg": [
              3
          ]
      },
      {
          "opcode": "println",
          "arg": [
              4
          ]
      },
      {
          "opcode": "println",
          "arg": [
              5
          ]
      },
      {
          "opcode": "println",
          "arg": [
              6
          ]
      },
      {
          "opcode": "println",
          "arg": [
              7
          ]
      },
      {
          "opcode": "println",
          "arg": [
              8
          ]
      },
      {
          "opcode": "println",
          "arg": [
              9
          ]
      },
      {
          "opcode": "println",
          "arg": [
              10
          ]
      },
      {
          "opcode": "halt"
      }
  ]